{"version":3,"file":"static/js/977.302ad107.chunk.js","mappings":"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","sources":["components/UI/SymptomTags.jsx","hooks/useStyles.js","../node_modules/@mui/icons-material/esm/Delete.js","pages/raw/Symptoms.jsx"],"sourcesContent":["import { FormControl, Autocomplete, TextField } from \"@mui/material\";\n\nconst SymptomTags = ({ tags, updateFields, setTagValue, isNew = true }) => {\n  const options = [\n    \"Constitutional/General\",\n    \"Eyes\",\n    \"Ear/Nose/Throat\",\n    \"Cardiovascular\",\n    \"Respiratory\",\n    \"Gastrointestinal\",\n    \"Genitourinary\",\n    \"Gynecological\",\n    \"Peripheral (extremities)\",\n    \"Hematologic/Lymphatic\",\n    \"Hormonal/Endocrinological\",\n    \"Musculoskeletal\",\n    \"Neurological\",\n    \"Psychiatric\",\n    \"Sexual history\",\n    \"Past Medical History\",\n    \"Skin\"\n  ];\n\n  return (\n    <FormControl sx={{ width: \"100%\" }}>\n      <Autocomplete\n        disablePortal\n        autoHighlight\n        size=\"small\"\n        id=\"symptom-tags\"\n        getOptionLabel={option => option}\n        value={tags}\n        options={options}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label=\"Organ System (tags)\"\n            sx={{\n              fontFamily: \"Poppins\",\n              color: \"#36454f\",\n              marginY: \"5px\",\n              fontSize: \"12px\"\n            }}\n            value={tags}\n          />\n        )}\n        onChange={(e, newValue) => {\n          if (isNew) {\n            updateFields({ tags: newValue });\n          } else {\n            setTagValue(newValue);\n          }\n        }}\n        freeSolo\n      />\n    </FormControl>\n  );\n};\n\nexport default SymptomTags;\n","export default function useStyles() {\n  const fieldStyles = {\n    color: \"#36454F\",\n    fontFamily: \"Helvetica\",\n    fontSize: \"12px\",\n    \"&:last-child td, &:last-child th\": { border: 0 }\n  };\n  const headerStyles = {\n    color: \"#36454F\",\n    fontFamily: \"Helvetica\",\n    fontSize: \"12px\",\n    fontWeight: \"bold\"\n  };\n\n  const dxKeys = [\"symptoms\", \"associated_symptoms\", \"minor\"];\n  const dxHeaders = [\"Diagnosis\", \"Symptoms\", \"Associated\", \"Minor\"];\n\n  const sxKeys = [\"symptoms\", \"associated_symptoms\", \"minor\"];\n  const sxHeaders = [\"Symptom\", \"Layman terms\", \"System\", \"Delete\"];\n\n  return { fieldStyles, headerStyles, sxKeys, sxHeaders, dxKeys, dxHeaders };\n}\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import { Delete } from \"@mui/icons-material\";\nimport {\n  Paper,\n  Stack,\n  Typography,\n  TableHead,\n  TableBody,\n  TableContainer,\n  Table,\n  TableRow,\n  TableCell,\n  Modal,\n  Button\n} from \"@mui/material\";\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SymptomTags from \"../../components/UI/SymptomTags\";\nimport usePost from \"../../hooks/usePost\";\nimport useStyles from \"../../hooks/useStyles\";\n\nconst Symptoms = ({ resource }) => {\n  const allSymptoms = resource.read();\n  const [symptoms, setSymptoms] = useState(allSymptoms);\n\n  const [tagValue, setTagValue] = useState(\"\");\n  const [modalSymptom, setModalSymptom] = useState(null);\n  const [openModal, setOpenModal] = useState(false);\n\n  const { deleteSymptom, updateSymptom } = usePost();\n  const { sxHeaders: headers, fieldStyles, headerStyles } = useStyles();\n\n  useEffect(() => {\n    document.title = \"Symptoms\";\n  }, []);\n\n  async function onDelete(id) {\n    const answer = confirm(\"Are you sure you want to delete this symptom?\");\n    if (answer) {\n      let temp = symptoms.filter(symptom => symptom.id !== id);\n      await deleteSymptom(id);\n      setSymptoms(temp);\n    }\n  }\n\n  function handleTagClick(sxObj) {\n    setModalSymptom(sxObj);\n    setOpenModal(true);\n  }\n\n  async function handleTagSubmit(e) {\n    e.preventDefault();\n    let data = {\n      symptom: modalSymptom.symptom,\n      medical_term: modalSymptom.medical_term,\n      tags: tagValue\n    };\n    await updateSymptom(modalSymptom.id, data);\n    setOpenModal(false);\n  }\n\n  return (\n    <Stack direction=\"column\" sx={{ width: \"100%\", height: \"100vh\", backgroundColor: \"#fff\" }}>\n      <Paper sx={{ width: \"100%\" }}>\n        <TableContainer>\n          <Table size=\"small\" aria-label=\"Requests Table\">\n            <TableHead>\n              <TableRow>\n                {headers.map(header => (\n                  <TableCell key={header} sx={headerStyles}>\n                    {header === \"Symptom\" ? `Symptom (${symptoms.length})` : header}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {symptoms.length > 0 &&\n                symptoms.map(sxObj => (\n                  <TableRow key={sxObj.id}>\n                    <TableCell>\n                      <Link to={`${sxObj.id}`} style={{ textDecoration: \"none\" }}>\n                        <Typography\n                          sx={{\n                            ...fieldStyles,\n                            cursor: \"pointer\",\n                            \"&:hover\": { color: \"blue\" }\n                          }}>\n                          {sxObj[\"medical_term\"]}\n                        </Typography>\n                      </Link>\n                    </TableCell>\n                    <TableCell>\n                      <Typography sx={fieldStyles}>{sxObj[\"symptom\"]}</Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Typography\n                        onClick={() => handleTagClick(sxObj)}\n                        sx={{\n                          ...fieldStyles,\n                          cursor: \"pointer\",\n                          \"&:hover\": { color: \"blue\" },\n                          fontSize: \"10px\"\n                        }}>\n                        {sxObj[\"tags\"] ? sxObj.tags : \"Add\"}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Delete\n                        onClick={() => onDelete(sxObj.id)}\n                        sx={{ cursor: \"pointer\", fontSize: \"16px\", \"&:hover\": { color: \"red\" } }}\n                      />\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n      {openModal && (\n        <Modal open={openModal} onClose={() => setOpenModal(false)}>\n          <Stack sx={{ backgroundColor: \"#fff\", margin: \"0 auto\", mt: \"100px\" }}>\n            <SymptomTags tags={modalSymptom.tags || \"\"} setTagValue={setTagValue} isNew={false} />\n            <Button onClick={handleTagSubmit}>Submit</Button>\n          </Stack>\n        </Modal>\n      )}\n    </Stack>\n  );\n};\n\nexport default Symptoms;\n"],"names":["_ref","tags","updateFields","setTagValue","_ref$isNew","isNew","_jsx","FormControl","sx","width","children","Autocomplete","disablePortal","autoHighlight","size","id","getOptionLabel","option","value","options","renderInput","params","TextField","_objectSpread","label","fontFamily","color","marginY","fontSize","onChange","e","newValue","freeSolo","useStyles","fieldStyles","border","headerStyles","fontWeight","sxKeys","sxHeaders","dxKeys","dxHeaders","createSvgIcon","d","allSymptoms","resource","read","_useState","useState","_useState2","_slicedToArray","symptoms","setSymptoms","_useState3","_useState4","tagValue","_useState5","_useState6","modalSymptom","setModalSymptom","_useState7","_useState8","openModal","setOpenModal","_usePost","usePost","deleteSymptom","updateSymptom","_useStyles","headers","_onDelete","_asyncToGenerator","_regeneratorRuntime","mark","_callee","temp","wrap","_context","prev","next","confirm","filter","symptom","stop","apply","arguments","_handleTagSubmit","_callee2","data","_context2","preventDefault","medical_term","useEffect","document","title","_jsxs","Stack","direction","height","backgroundColor","Paper","TableContainer","Table","TableHead","TableRow","map","header","TableCell","concat","length","TableBody","sxObj","Link","to","style","textDecoration","Typography","cursor","onClick","handleTagClick","Delete","_x","onDelete","Modal","open","onClose","margin","mt","SymptomTags","Button","_x2"],"sourceRoot":""}