{"version":3,"file":"static/js/988.73076e36.chunk.js","mappings":"kSAgDA,EA9Ca,SAAHA,GAAgC,IAA1BC,EAAID,EAAJC,KAAMC,EAAYF,EAAZE,aAqBpB,IAAMC,EAAU,CACdC,MAAOH,EACPI,SANF,SAA0BC,EAAGC,GAC3BL,EAAa,CAAED,KAAMM,GACvB,EAKEC,WAAW,GAEb,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,MAAO,OAAQC,OAAQ,SAAUC,GAAI,QAASC,UACvDN,EAAAA,EAAAA,KAACO,EAAAA,EAAW,CAACL,GAAI,CAAEC,MAAO,OAAQG,UAChCN,EAAAA,EAAAA,KAACQ,EAAAA,GAAiBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAKf,GAAO,IAAE,aAAW,OAAMY,SA5BvC,CACd,UACA,QACA,MACA,OACA,KACA,KACA,MACA,QACA,QACA,OACA,QACA,QACA,QAgBeI,KAAI,SAAAC,GAAM,OACjBX,EAAAA,EAAAA,KAACY,EAAAA,EAAY,CACXjB,MAAOgB,EAEPT,GAAI,CACFW,OAAQ,QACRC,UAAW,oCACXR,SACDK,GALIA,EAMQ,UAM3B,E,UCkBA,EA9DwB,SAAHpB,GAQd,IAPLwB,EAAQxB,EAARwB,SACAC,EAAWzB,EAAXyB,YACAC,EAAY1B,EAAZ0B,aACAxB,EAAYF,EAAZE,aACAyB,EAAE3B,EAAF2B,GACAC,EAAK5B,EAAL4B,MACAC,EAAS7B,EAAT6B,UAEAC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAQtC,OANAG,EAAAA,EAAAA,YAAU,WACJX,GACFU,EAAiB,GAErB,GAAG,CAACV,KAGFpB,EAAAA,EAAAA,KAACO,EAAAA,EAAW,CAACL,GAAI,CAAEC,MAAO,OAAQG,UAChCN,EAAAA,EAAAA,KAACgC,EAAAA,EAAY,CACXC,eAAa,EACbC,eAAa,EACbC,KAAK,QACLjB,GAAIA,EACJkB,eAAgB,SAAAzB,GAAM,OAAIA,CAAM,EAChChB,MAAO8B,EAAUI,EAAgBd,EAASL,KAAI,SAAA2B,GAAC,OAAIA,EAAEC,YAAY,IACjEC,QAASvB,EACTwB,YAAa,SAAAC,GAAM,OACjBzC,EAAAA,EAAAA,KAAC0C,EAAAA,GAASjC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJgC,GAAM,IACVtB,MAAOA,EACPjB,GAAI,CACFyC,WAAY,UACZC,MAAO,UACPC,QAAS,MACTC,SAAU,QAEZnD,MAAO8B,EAAUI,EAAgBd,EAASL,KAAI,SAAA2B,GAAC,OAAIA,EAAEC,YAAY,MACjE,EAEJS,UAAQ,EACRnD,SAAU,SAACC,EAAGmD,GACZtB,GAAW,GACXI,EAAiBkB,GACjB,IAAMC,EAAYD,EAAStC,KAAI,SAAAwC,GAC7B,OAAOjC,EAAakC,MAAK,SAAAd,GAAC,OAAIA,EAAEC,eAAiBY,CAAW,GAC9D,IAGEzD,EADS,aAAPyB,EACW,CAAEH,SAAUkC,GACT,wBAAP/B,EACI,CAAEkC,oBAAqBH,GAEvB,CAAEI,MAAOJ,GAE1B,EACAK,UAAQ,KAIhB,E,8BCtDMC,EAAe,CACnBC,UAAW,GACXC,IAAK,CAAC,EAAG,KACTjE,KAAM,MACNuB,SAAU,GACVqC,oBAAqB,GACrBC,MAAO,IA+GT,EAxGqB,SAAH9D,GAA0B,IAJrBmE,EAICC,EAAQpE,EAARoE,SAAUzC,EAAE3B,EAAF2B,GAC1B0C,EAAcD,EAASE,OACvB5C,GANeyC,EAMeE,EAL7BE,OAAOC,OAAOL,GAASM,SAAQ,SAAAC,GAAQ,OAAIH,OAAOC,OAAOE,EAAS,KAMnEC,EAAqBjD,EAAaP,KAAI,SAAAR,GAAE,OAAIA,EAAGoC,YAAY,IAAE6B,OACnEC,SAASC,MAAe,QAAPnD,EAAe,gBAAkB,iBAClD,IAAMoD,GAAWC,EAAAA,EAAAA,MACTC,GAAmBC,EAAAA,EAAAA,KAAnBD,eACRE,GAA6CC,EAAAA,EAAAA,KAArCC,EAAeF,EAAfE,gBAAiBC,EAAeH,EAAfG,gBAEzBxD,GAAwBC,EAAAA,EAAAA,UAASiC,GAAahC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCyD,EAAIvD,EAAA,GAAEwD,EAAOxD,EAAA,GAEpBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CP,EAASQ,EAAA,GAAEoD,EAAYpD,EAAA,GAiBH,SAAAqD,IAU1B,OAV0BA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA3B,SAAAC,EAA4BxF,GAAC,OAAAsF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,GAAnB5F,EAAE6F,iBACS,QAAPxE,EAAY,CAAAqE,EAAAE,KAAA,QACI,OAAlBE,QAAQC,IAAId,GAAMS,EAAAE,KAAA,EACZb,EAAgBE,GAAM,KAAD,EAC3BE,GAAa,GAAMO,EAAAE,KAAA,uBAAAF,EAAAE,KAAA,GAEbZ,EAAgB3D,EAAI4D,GAAM,KAAD,GAC/BR,EAAS,cAAc,yBAAAiB,EAAAM,OAAA,GAAAR,EAAA,MAE1BS,MAAA,KAAAC,UAAA,CAED,SAAStG,EAAauG,GACpBjB,GAAQ,SAAAS,GACN,OAAA/E,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAY+E,GAASQ,EACvB,GACF,CAEA,OAjCAjE,EAAAA,EAAAA,YAAU,WACJX,IACF2D,EAAQxB,GACRyB,GAAa,GAEjB,GAAG,CAAC5D,KAEJW,EAAAA,EAAAA,YAAU,WACgB,SAAAkE,IAGvB,OAHuBA,GAAAf,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAxB,SAAAc,IAAA,IAAAC,EAAA,OAAAhB,EAAAA,EAAAA,KAAAG,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EACmBjB,EAAetD,GAAI,KAAD,EAA7BiF,EAAEC,EAAAC,KACRtB,EAAQoB,GAAI,wBAAAC,EAAAP,OAAA,GAAAK,EAAA,MACbJ,MAAA,KAAAC,UAAA,CACU,QAAP7E,GALW,WACS+E,EAAAH,MAAC,KAADC,UAAA,CAINO,EACpB,GAAG,KAqBDtG,EAAAA,EAAAA,KAAA,QAAMuG,SArBD,SAEoBC,GAAA,OAAAvB,EAAAa,MAAC,KAADC,UAAA,EAmBIzF,UAC3BmG,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,QAAS,EAAGzG,GAAI,CAAE0G,eAAgB,SAAUC,WAAY,UAAWvG,SAAA,EACxEN,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,MAAO,MAAOC,OAAQ,UAAWE,UAC1CN,EAAAA,EAAAA,KAAC8G,EAAI,CAACtH,KAAMsF,EAAKtF,KAAMC,aAAcA,OAGvCO,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,MAAO,MAAOC,OAAQ,UAAWE,UAC1CN,EAAAA,EAAAA,KAACO,EAAAA,EAAW,CAACL,GAAI,CAAEC,MAAO,QAASG,UACjCN,EAAAA,EAAAA,KAAC0C,EAAAA,EAAS,CACR/C,MAAOmF,EAAKtB,UACZrB,KAAK,QACLhB,MAAM,YACND,GAAG,YACHtB,SAAU,SAAAC,GAAC,OAAIJ,EAAa,CAAE+D,UAAW3D,EAAEkH,OAAOpH,OAAQ,SAKhEK,EAAAA,EAAAA,KAACgH,EAAe,CACdjG,SAAU+D,EAAK/D,SACfC,YAAakD,EACbjD,aAAcA,EACdxB,aAAcA,EACd0B,MAAM,WACND,GAAG,WACHE,UAAWA,KAEbpB,EAAAA,EAAAA,KAACgH,EAAe,CACdjG,SAAU+D,EAAK1B,oBACfnC,aAAcA,EACdD,YAAakD,EACbzE,aAAcA,EACd0B,MAAM,sBACND,GAAG,sBACHE,UAAWA,KAGbpB,EAAAA,EAAAA,KAACgH,EAAe,CACdjG,SAAU+D,EAAKzB,MACfpC,aAAcA,EACdD,YAAakD,EACbzE,aAAcA,EACd0B,MAAM,QACND,GAAG,iBACHE,UAAWA,KAGbpB,EAAAA,EAAAA,KAACO,EAAAA,EAAW,CAACL,GAAI,CAAEE,OAAQ,aAAcE,UACvCN,EAAAA,EAAAA,KAACiH,EAAAA,EAAM,CAACC,QAAQ,YAAYC,KAAK,SAASjH,GAAI,CAAEC,MAAO,SAAUG,SACvD,QAAPY,EAAe,gBAAkB,2BAM9C,C,yFC1HMkG,EAAU,6BAED,SAASzC,IACQ,SAAA0C,IAO7B,OAP6BA,GAAAnC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA9B,SAAAc,EAA+BpB,GAAI,OAAAK,EAAAA,EAAAA,KAAAG,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EAC3B6B,EAAAA,EAAAA,KACEF,EAAUA,EAAU,iBAAkBtC,GAC3CyC,MAAK,SAAAC,GAAG,OAAI7B,QAAQC,IAAI4B,EAAI,IAC5BC,OAAM,SAAAC,GAAG,OAAI/B,QAAQC,IAAI8B,EAAI,IAAE,KAAD,EAEjCC,MAAM,oBAAoB,wBAAAvB,EAAAP,OAAA,GAAAK,EAAA,MAC3BJ,MAAA,KAAAC,UAAA,CAE6B,SAAA6B,IAO7B,OAP6BA,GAAA1C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA9B,SAAAC,EAA+BnE,EAAI4D,GAAI,OAAAK,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC/B6B,EAAAA,EAAAA,MACGF,EAAO,kBAAAS,OAAqB3G,GAAM4D,GACxCyC,MAAK,SAAAC,GAAG,OAAI7B,QAAQC,IAAI4B,EAAI,IAC5BC,OAAM,SAAAC,GAAG,OAAI/B,QAAQC,IAAI8B,EAAI,IAAE,KAAD,EAEjCC,MAAM,sBAAsB,wBAAApC,EAAAM,OAAA,GAAAR,EAAA,MAC7BS,MAAA,KAAAC,UAAA,CAE6B,SAAA+B,IAO7B,OAP6BA,GAAA5C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA9B,SAAA2C,EAA+B7G,GAAE,OAAAiE,EAAAA,EAAAA,KAAAG,MAAA,SAAA0C,GAAA,cAAAA,EAAAxC,KAAAwC,EAAAvC,MAAA,cAAAuC,EAAAvC,KAAA,EACzB6B,EAAAA,EAAAA,OACIF,EAAO,kBAAAS,OAAqB3G,IACnCqG,MAAK,SAAAC,GAAG,OAAI7B,QAAQC,IAAI4B,EAAI,IAC5BC,OAAM,SAAAC,GAAG,OAAI/B,QAAQC,IAAI8B,EAAI,IAAE,KAAD,EAEjCC,MAAM,sBAAsB,wBAAAK,EAAAnC,OAAA,GAAAkC,EAAA,MAC7BjC,MAAA,KAAAC,UAAA,CAE2B,SAAAkC,IAO3B,OAP2BA,GAAA/C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA5B,SAAA8C,EAA6BpD,GAAI,OAAAK,EAAAA,EAAAA,KAAAG,MAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cAAA0C,EAAA1C,KAAA,EACzB6B,EAAAA,EAAAA,KACEF,EAAU,gBAAiBtC,GAChCyC,MAAK,SAAAC,GAAG,OAAI7B,QAAQC,IAAI4B,EAAI,IAC5BC,OAAM,SAAAC,GAAG,OAAI/B,QAAQC,IAAI8B,EAAI,IAAE,KAAD,EAEjCC,MAAM,kBAAkB,wBAAAQ,EAAAtC,OAAA,GAAAqC,EAAA,MACzBpC,MAAA,KAAAC,UAAA,CAE2B,SAAAqC,IAO3B,OAP2BA,GAAAlD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA5B,SAAAiD,EAA6BnH,EAAI4D,GAAI,OAAAK,EAAAA,EAAAA,KAAAG,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA7C,KAAA,EAC7B6B,EAAAA,EAAAA,MACGF,EAAO,iBAAAS,OAAoB3G,GAAM4D,GACvCyC,MAAK,SAAAC,GAAG,OAAI7B,QAAQC,IAAI4B,EAAI,IAC5BC,OAAM,SAAAC,GAAG,OAAI/B,QAAQC,IAAI8B,EAAI,IAAE,KAAD,EAEjCC,MAAM,oBAAoB,wBAAAW,EAAAzC,OAAA,GAAAwC,EAAA,MAC3BvC,MAAA,KAAAC,UAAA,CAE2B,SAAAwC,IAK3B,OAL2BA,GAAArD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA5B,SAAAoD,EAA6BtH,GAAE,OAAAiE,EAAAA,EAAAA,KAAAG,MAAA,SAAAmD,GAAA,cAAAA,EAAAjD,KAAAiD,EAAAhD,MAAA,cAAAgD,EAAAhD,KAAA,EACvB6B,EAAAA,EAAAA,OACIF,EAAO,iBAAAS,OAAoB3G,IAClCqG,MAAK,SAAAC,GAAG,OAAI7B,QAAQC,IAAI4B,EAAI,IAC5BC,OAAM,SAAAC,GAAG,OAAI/B,QAAQC,IAAI8B,EAAI,IAAE,KAAD,mBAAAe,EAAA5C,OAAA,GAAA2C,EAAA,MAClC1C,MAAA,KAAAC,UAAA,CAED,MAAO,CACLnB,gBAtD+B,SACH4B,GAAA,OAAAa,EAAAvB,MAAC,KAADC,UAAA,EAsD5BlB,gBA/CD,SAE6B6D,EAAAC,GAAA,OAAAf,EAAA9B,MAAC,KAADC,UAAA,EA8C5B6C,gBAvCD,SAE6BC,GAAA,OAAAf,EAAAhC,MAAC,KAADC,UAAA,EAsC5B+C,cA/BD,SAE2BC,GAAA,OAAAd,EAAAnC,MAAC,KAADC,UAAA,EA8B1BiD,cAvBD,SAE2BC,EAAAC,GAAA,OAAAd,EAAAtC,MAAC,KAADC,UAAA,EAsB1BoD,cAfD,SAE2BC,GAAA,OAAAb,EAAAzC,MAAC,KAADC,UAAA,EAe9B,C","sources":["components/UI/Tags.jsx","components/Symptom/SymptomSelector.jsx","components/Diagnosis/AddDiagnosis.jsx","hooks/usePost.js"],"sourcesContent":["import { Box, FormControl, ToggleButtonGroup, ToggleButton } from \"@mui/material\";\n\nconst Tags = ({ tags, updateFields }) => {\n  const options = [\n    \"general\",\n    \"heent\",\n    \"cvs\",\n    \"resp\",\n    \"gi\",\n    \"gu\",\n    \"msk\",\n    \"neuro\",\n    \"obgyn\",\n    \"endo\",\n    \"blood\",\n    \"psych\",\n    \"onco\"\n  ];\n\n  function handleTagsChange(e, newTags) {\n    updateFields({ tags: newTags });\n  }\n\n  const control = {\n    value: tags,\n    onChange: handleTagsChange,\n    exclusive: true\n  };\n  return (\n    <Box sx={{ width: \"100%\", margin: \"0 auto\", my: \"10px\" }}>\n      <FormControl sx={{ width: \"80%\" }}>\n        <ToggleButtonGroup {...control} aria-label=\"Tags\">\n          {options.map(option => (\n            <ToggleButton\n              value={option}\n              key={option}\n              sx={{\n                height: \"3.3vh\",\n                boxShadow: \"rgba(0, 0, 0, 0.16) 0px 1px 4px;\"\n              }}>\n              {option}\n            </ToggleButton>\n          ))}\n        </ToggleButtonGroup>\n      </FormControl>\n    </Box>\n  );\n};\nexport default Tags;\n","import { Autocomplete, TextField, FormControl } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\nconst SymptomSelector = ({\n  symptoms,\n  symptomList,\n  jsonSymptoms,\n  updateFields,\n  id,\n  label,\n  didSubmit\n}) => {\n  const [didEdit, setDidEdit] = useState(false);\n  const [symptomValues, setSymptomValues] = useState([]);\n\n  useEffect(() => {\n    if (didSubmit) {\n      setSymptomValues([]);\n    }\n  }, [didSubmit]);\n\n  return (\n    <FormControl sx={{ width: \"90%\" }}>\n      <Autocomplete\n        disablePortal\n        autoHighlight\n        size=\"small\"\n        id={id}\n        getOptionLabel={option => option}\n        value={didEdit ? symptomValues : symptoms.map(s => s.medical_term)}\n        options={symptomList}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label={label}\n            sx={{\n              fontFamily: \"Poppins\",\n              color: \"#36454f\",\n              marginY: \"5px\",\n              fontSize: \"12px\"\n            }}\n            value={didEdit ? symptomValues : symptoms.map(s => s.medical_term)}\n          />\n        )}\n        multiple\n        onChange={(e, newValue) => {\n          setDidEdit(true);\n          setSymptomValues(newValue);\n          const sxObjects = newValue.map(medicalTerm => {\n            return jsonSymptoms.find(s => s.medical_term === medicalTerm);\n          });\n          // console.log(sxObjects);\n          if (id === \"symptoms\") {\n            updateFields({ symptoms: sxObjects });\n          } else if (id === \"associated-symptoms\") {\n            updateFields({ associated_symptoms: sxObjects });\n          } else {\n            updateFields({ minor: sxObjects });\n          }\n        }}\n        freeSolo\n      />\n    </FormControl>\n  );\n};\nexport default SymptomSelector;\n","import { FormControl, Box, Stack, TextField, Button } from \"@mui/material\";\n\nimport { useState, useEffect } from \"react\";\nimport Tags from \"../UI/Tags\";\nimport SymptomSelector from \"../Symptom/SymptomSelector\";\n\nimport useFetch from \"../../hooks/useFetch\";\nimport usePost from \"../../hooks/usePost\";\nimport { useNavigate } from \"react-router\";\n\nconst INITIAL_DATA = {\n  diagnosis: \"\",\n  age: [0, 100],\n  tags: \"msk\",\n  symptoms: [],\n  associated_symptoms: [],\n  minor: []\n};\n\nconst flattenHashmap = hashMap => {\n  return Object.values(hashMap).flatMap(category => Object.values(category));\n};\n\nconst AddDiagnosis = ({ resource, id }) => {\n  const allSymptoms = resource.read();\n  const jsonSymptoms = flattenHashmap(allSymptoms);\n  const sortedSymptomNames = jsonSymptoms.map(sx => sx.medical_term).sort();\n  document.title = id === \"add\" ? \"Add Diagnosis\" : \"Edit Diagnosis\";\n  const navigate = useNavigate();\n  const { fetchDiagnosis } = useFetch();\n  const { addNewDiagnosis, updateDiagnosis } = usePost();\n\n  const [data, setData] = useState(INITIAL_DATA);\n\n  const [didSubmit, setDidSubmit] = useState(false);\n\n  useEffect(() => {\n    if (didSubmit) {\n      setData(INITIAL_DATA);\n      setDidSubmit(false);\n    }\n  }, [didSubmit]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const dx = await fetchDiagnosis(id);\n      setData(dx);\n    }\n    if (id !== \"add\") fetchData();\n  }, []);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (id === \"add\") {\n      console.log(data);\n      await addNewDiagnosis(data);\n      setDidSubmit(true);\n    } else {\n      await updateDiagnosis(id, data);\n      navigate(\"/diagnoses\");\n    }\n  }\n\n  function updateFields(fields) {\n    setData(prev => {\n      return { ...prev, ...fields };\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Stack spacing={2} sx={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <Box sx={{ width: \"90%\", margin: \"0 auto\" }}>\n          <Tags tags={data.tags} updateFields={updateFields} />\n        </Box>\n\n        <Box sx={{ width: \"90%\", margin: \"0 auto\" }}>\n          <FormControl sx={{ width: \"100%\" }}>\n            <TextField\n              value={data.diagnosis}\n              size=\"small\"\n              label=\"Diagnosis\"\n              id=\"diagnosis\"\n              onChange={e => updateFields({ diagnosis: e.target.value })}\n            />\n          </FormControl>\n        </Box>\n\n        <SymptomSelector\n          symptoms={data.symptoms}\n          symptomList={sortedSymptomNames}\n          jsonSymptoms={jsonSymptoms}\n          updateFields={updateFields}\n          label=\"Symptoms\"\n          id=\"symptoms\"\n          didSubmit={didSubmit}\n        />\n        <SymptomSelector\n          symptoms={data.associated_symptoms}\n          jsonSymptoms={jsonSymptoms}\n          symptomList={sortedSymptomNames}\n          updateFields={updateFields}\n          label=\"Associated Symptoms\"\n          id=\"associated-symptoms\"\n          didSubmit={didSubmit}\n        />\n\n        <SymptomSelector\n          symptoms={data.minor}\n          jsonSymptoms={jsonSymptoms}\n          symptomList={sortedSymptomNames}\n          updateFields={updateFields}\n          label=\"Minor\"\n          id=\"minor-symptoms\"\n          didSubmit={didSubmit}\n        />\n\n        <FormControl sx={{ margin: \"30px auto\" }}>\n          <Button variant=\"contained\" type=\"submit\" sx={{ width: \"200px\" }}>\n            {id === \"add\" ? \"Add Diagnosis\" : \"Update Diagnosis\"}\n          </Button>\n        </FormControl>\n      </Stack>\n    </form>\n  );\n};\n\nexport default AddDiagnosis;\n\n/* {activeField === \"age\" && (\n          <Stack direction=\"row\" sx={{ width: \"100%\", margin: \"20px auto\" }}>\n            <Typography variant=\"button\" sx={{ ml: \"50px\" }}>\n              Age\n            </Typography>\n            <Slider\n              getAriaLabel={() => \"Age range\"}\n              value={data.age}\n              onChange={(e, newValue) => updateFields({ age: newValue })}\n              valueLabelDisplay=\"auto\"\n              sx={{ width: \"50%\", ml: \"50px\" }}\n            />\n          </Stack>\n        )} */\n","import axios from \"axios\";\n\n// const baseUrl = \"http://localhost:3001\";\nconst baseUrl = \"http://192.241.132.27:3007\"; // Nginx proxy endpoint\n\nexport default function usePost() {\n  async function addNewDiagnosis(data) {\n    await axios\n      .post(baseUrl + baseUrl + \"/api/diagnoses\", data)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n\n    alert(\"ADDED Diagnosis.\");\n  }\n\n  async function updateDiagnosis(id, data) {\n    await axios\n      .patch(baseUrl + `/api/diagnoses/${id}`, data)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n\n    alert(\"UPDATED Diagnosis.\");\n  }\n\n  async function deleteDiagnosis(id) {\n    await axios\n      .delete(baseUrl + `/api/diagnosis/${id}`)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n\n    alert(\"DELETED Diagnosis.\");\n  }\n\n  async function addNewSymptom(data) {\n    await axios\n      .post(baseUrl + \"/api/symptoms\", data)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n\n    alert(\"ADDED Symptom.\");\n  }\n\n  async function updateSymptom(id, data) {\n    await axios\n      .patch(baseUrl + `/api/symptoms/${id}`, data)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n\n    alert(\"UPDATED Symptom.\");\n  }\n\n  async function deleteSymptom(id) {\n    await axios\n      .delete(baseUrl + `/api/symptoms/${id}`)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  }\n\n  return {\n    addNewDiagnosis,\n    updateDiagnosis,\n    deleteDiagnosis,\n    addNewSymptom,\n    updateSymptom,\n    deleteSymptom\n  };\n}\n"],"names":["_ref","tags","updateFields","control","value","onChange","e","newTags","exclusive","_jsx","Box","sx","width","margin","my","children","FormControl","ToggleButtonGroup","_objectSpread","map","option","ToggleButton","height","boxShadow","symptoms","symptomList","jsonSymptoms","id","label","didSubmit","_useState","useState","_useState2","_slicedToArray","didEdit","setDidEdit","_useState3","_useState4","symptomValues","setSymptomValues","useEffect","Autocomplete","disablePortal","autoHighlight","size","getOptionLabel","s","medical_term","options","renderInput","params","TextField","fontFamily","color","marginY","fontSize","multiple","newValue","sxObjects","medicalTerm","find","associated_symptoms","minor","freeSolo","INITIAL_DATA","diagnosis","age","hashMap","resource","allSymptoms","read","Object","values","flatMap","category","sortedSymptomNames","sort","document","title","navigate","useNavigate","fetchDiagnosis","useFetch","_usePost","usePost","addNewDiagnosis","updateDiagnosis","data","setData","setDidSubmit","_handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","preventDefault","console","log","stop","apply","arguments","fields","_fetchData","_callee","dx","_context","sent","fetchData","onSubmit","_x","_jsxs","Stack","spacing","justifyContent","alignItems","Tags","target","SymptomSelector","Button","variant","type","baseUrl","_addNewDiagnosis","axios","then","res","catch","err","alert","_updateDiagnosis","concat","_deleteDiagnosis","_callee3","_context3","_addNewSymptom","_callee4","_context4","_updateSymptom","_callee5","_context5","_deleteSymptom","_callee6","_context6","_x2","_x3","deleteDiagnosis","_x4","addNewSymptom","_x5","updateSymptom","_x6","_x7","deleteSymptom","_x8"],"sourceRoot":""}