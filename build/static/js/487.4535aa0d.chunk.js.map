{"version":3,"file":"static/js/487.4535aa0d.chunk.js","mappings":"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","sources":["hooks/usePost.js","hooks/useStyles.js","components/Symptom/SymptomsFilter.jsx","../node_modules/@mui/icons-material/esm/Delete.js","pages/Symptoms.jsx"],"sourcesContent":["import axios from \"axios\";\n\n// const baseUrl = \"https://www.mafishi.io\"; // Nginx proxy endpoint\nconst isDevelopment = process.env.NODE_ENV === \"development\";\nconst baseUrl = isDevelopment ? \"http://localhost:3007\" : \"\";\n\nexport default function usePost() {\n  async function addNewDiagnosis(data) {\n    await axios\n      .post(`${baseUrl}/api/diagnoses`, data) // Prepend baseUrl to the request URL\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n\n    alert(\"ADDED Diagnosis.\");\n  }\n\n  async function updateDiagnosis(id, data) {\n    await axios\n      .patch(`${baseUrl}/api/diagnoses/${id}`, data) // Prepend baseUrl to the request URL\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n\n    alert(\"UPDATED Diagnosis.\");\n  }\n\n  async function deleteDiagnosis(id) {\n    await axios\n      .delete(`${baseUrl}/api/diagnoses/${id}`) // Prepend baseUrl to the request URL\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n\n    alert(\"DELETED Diagnosis.\");\n  }\n\n  async function addNewSymptom(data) {\n    await axios\n      .post(`${baseUrl}/api/symptoms`, data) // Prepend baseUrl to the request URL\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n\n    alert(\"ADDED Symptom.\");\n  }\n\n  async function updateSymptom(id, data) {\n    await axios\n      .patch(`${baseUrl}/api/symptoms/${id}`, data) // Prepend baseUrl to the request URL\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n\n    alert(\"UPDATED Symptom.\");\n  }\n\n  async function deleteSymptom(id) {\n    await axios\n      .delete(`${baseUrl}/api/symptoms/${id}`) // Prepend baseUrl to the request URL\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  }\n\n  return {\n    addNewDiagnosis,\n    updateDiagnosis,\n    deleteDiagnosis,\n    addNewSymptom,\n    updateSymptom,\n    deleteSymptom\n  };\n}\n","export default function useStyles() {\n  const fieldStyles = {\n    color: \"#36454F\",\n    fontFamily: \"Helvetica\",\n    fontSize: \"12px\",\n    \"&:last-child td, &:last-child th\": { border: 0 }\n  };\n  const headerStyles = {\n    color: \"#36454F\",\n    fontFamily: \"Helvetica\",\n    fontSize: \"12px\",\n    fontWeight: \"bold\"\n  };\n\n  const dxKeys = [\"symptoms\", \"associated_symptoms\", \"minor\"];\n  const dxHeaders = [\"Diagnosis\", \"Symptoms\", \"Associated\", \"Minor\", \"Tags\"];\n\n  const sxKeys = [\"symptoms\", \"associated_symptoms\", \"minor\"];\n  const sxHeaders = [\"Symptom\", \"Layman terms\", \"System\", \"Delete\"];\n\n  return { fieldStyles, headerStyles, sxKeys, sxHeaders, dxKeys, dxHeaders };\n}\n","import { Box, FormControl, ToggleButtonGroup, ToggleButton } from \"@mui/material\";\n\nconst SymptomsFilter = ({ filter, setFilter, setPage }) => {\n  const options = [\n    { label: \"Show all\", abbr: \"All\" },\n    { label: \"Constitutional/General\", abbr: \"GEN\" },\n    { label: \"Eyes\", abbr: \"EYES\" },\n    { label: \"Ear/Nose/Throat\", abbr: \"ENT\" },\n    { label: \"Cardiovascular\", abbr: \"CVS\" },\n    { label: \"Respiratory\", abbr: \"RESP\" },\n    { label: \"Gastrointestinal\", abbr: \"GI\" },\n    { label: \"Genitourinary\", abbr: \"GU\" },\n    { label: \"Gynecological\", abbr: \"OBGYN\" },\n    { label: \"Peripheral (extremities)\", abbr: \"PE\" },\n    { label: \"Hematologic/Lymphatic\", abbr: \"HEME\" },\n    { label: \"Hormonal/Endocrinological\", abbr: \"ENDO\" },\n    { label: \"Musculoskeletal\", abbr: \"MSK\" },\n    { label: \"Neurological\", abbr: \"NEURO\" },\n    { label: \"Psychiatric\", abbr: \"PSYCH\" },\n    { label: \"Sexual history\", abbr: \"SXH\" },\n    { label: \"Past Medical History\", abbr: \"PMH\" },\n    { label: \"Skin\", abbr: \"SKIN\" },\n    { label: \"Other\", abbr: \"OTHER\" }\n  ];\n\n  const handleFilterChange = (_, value) => {\n    console.log(value);\n    setFilter(value || \"Show all\");\n    setPage(0);\n  };\n\n  const control = {\n    value: filter,\n    onChange: handleFilterChange,\n    exclusive: true\n  };\n\n  return (\n    <Box sx={{ width: \"100%\", margin: \"0 auto\", my: \"20px\", mx: \"10px\" }}>\n      <FormControl sx={{ width: \"100%\" }}>\n        <ToggleButtonGroup {...control} aria-label=\"Tags\">\n          {options.map(option => (\n            <ToggleButton\n              value={option.label}\n              key={option.label}\n              sx={{\n                height: \"3.3vh\",\n                boxShadow: \"rgba(0, 0, 0, 0.16) 0px 1px 4px;\",\n                \"&.Mui-selected\": {\n                  backgroundColor: \"#3f51b5\",\n                  color: \"white\"\n                },\n                \"&.Mui-selected:hover\": {\n                  backgroundColor: \"#5c6bc0\",\n                  color: \"white\"\n                },\n                \"&:hover\": {\n                  backgroundColor: \"#e8eaf6\"\n                },\n                borderRadius: \"20px\",\n                borderColor: \"#d9d9d9\",\n                textTransform: \"none\",\n                \"&.Mui-selected\": {\n                  backgroundColor: \"#3f51b5\",\n                  color: \"#fff\",\n                  borderColor: \"#3f51b5\"\n                }\n              }}>\n              {option.abbr}\n            </ToggleButton>\n          ))}\n        </ToggleButtonGroup>\n      </FormControl>\n    </Box>\n  );\n};\n\nexport default SymptomsFilter;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import {\n  Paper,\n  Stack,\n  Typography,\n  TableHead,\n  TableBody,\n  TableContainer,\n  Table,\n  TableRow,\n  TableCell,\n  TablePagination\n} from \"@mui/material\";\n\nimport { useMemo, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SymptomsFilter from \"../components/Symptom/SymptomsFilter\";\n\nimport usePost from \"../hooks/usePost\";\nimport useStyles from \"../hooks/useStyles\";\nimport { Delete } from \"@mui/icons-material\";\n\nconst Symptoms = ({ resource }) => {\n  document.title = \"Symptoms\";\n  const allSymptoms = resource.read();\n  const { sxHeaders: headers, fieldStyles, headerStyles } = useStyles();\n  const { deleteSymptom } = usePost();\n  const [filter, setFilter] = useState(\"Show all\");\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(20);\n\n  const displayedSymptoms = useMemo(() => {\n    const combinedSymptoms =\n      filter === \"Show all\"\n        ? Object.values(allSymptoms)\n            .flat()\n            .map(s => Object.values(s))\n            .flat()\n        : Object.values(allSymptoms[filter] || {});\n\n    return combinedSymptoms\n      .sort((a, b) => a.medical_term.localeCompare(b.medical_term))\n      .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\n      .map(symptom => ({ ...symptom, tags: symptom.tags }));\n  }, [allSymptoms, filter, page, rowsPerPage]);\n\n  const totalSymptomsCount = useMemo(() => {\n    const combinedSymptoms =\n      filter === \"Show all\" ? Object.values(allSymptoms) : Object.keys(allSymptoms[filter]);\n\n    const combinedValues = combinedSymptoms.map(s => Object.values(s)).flat();\n\n    return filter === \"Show all\" ? combinedValues.length : combinedSymptoms.length;\n  }, [allSymptoms, filter]);\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  async function onDelete(id) {\n    const answer = confirm(\"Are you sure you want to delete this symptom?\");\n    if (answer) {\n      await deleteSymptom(id);\n      resource.mutate(data => {\n        const newData = { ...data };\n        Object.keys(newData).forEach(key => {\n          newData[key] = newData[key].filter(sx => sx.id !== id);\n        });\n        return newData;\n      }, false);\n    }\n  }\n\n  return (\n    <Stack direction=\"column\" sx={{ width: \"100%\", height: \"100vh\", backgroundColor: \"#fff\" }}>\n      <SymptomsFilter filter={filter} setFilter={setFilter} setPage={setPage} />\n      <Paper sx={{ width: \"100%\" }}>\n        <TableContainer>\n          <Table size=\"small\" aria-label=\"Requests Table\">\n            <TableHead>\n              <TableRow>\n                {headers.map(header => (\n                  <TableCell key={header} sx={headerStyles}>\n                    {header === \"Symptom\" ? `Symptom (${totalSymptomsCount})` : header}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {displayedSymptoms.map(sxObj => (\n                <TableRow key={sxObj.id}>\n                  <TableCell>\n                    <Link to={`${sxObj.id}`} style={{ textDecoration: \"none\" }}>\n                      <Typography\n                        sx={{\n                          ...fieldStyles,\n                          cursor: \"pointer\",\n                          \"&:hover\": { color: \"blue\" }\n                        }}>\n                        {sxObj[\"medical_term\"]}\n                      </Typography>\n                    </Link>\n                  </TableCell>\n                  <TableCell>\n                    <Typography sx={fieldStyles}>{sxObj[\"symptom\"]}</Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      onClick={() => handleTagClick(sxObj)}\n                      sx={{\n                        ...fieldStyles,\n                        cursor: \"pointer\",\n                        \"&:hover\": { color: \"blue\" },\n                        fontSize: \"10px\"\n                      }}>\n                      {sxObj[\"tags\"] ? sxObj.tags : \"Add\"}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Delete\n                      onClick={() => onDelete(sxObj.id)}\n                      sx={{ cursor: \"pointer\", fontSize: \"16px\", \"&:hover\": { color: \"red\" } }}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TablePagination\n            component=\"div\"\n            count={totalSymptomsCount}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n            labelRowsPerPage=\"Rows per page\"\n            rowsPerPageOptions={[10, 20, 30, 40, 50]}\n          />\n        </TableContainer>\n      </Paper>\n    </Stack>\n  );\n};\n\nexport default Symptoms;\n"],"names":["baseUrl","usePost","_addNewDiagnosis","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","axios","concat","then","res","console","log","catch","err","alert","stop","apply","arguments","_updateDiagnosis","_callee2","id","_context2","_deleteDiagnosis","_callee3","_context3","_addNewSymptom","_callee4","_context4","_updateSymptom","_callee5","_context5","_deleteSymptom","_callee6","_context6","addNewDiagnosis","_x","updateDiagnosis","_x2","_x3","deleteDiagnosis","_x4","addNewSymptom","_x5","updateSymptom","_x6","_x7","deleteSymptom","_x8","useStyles","fieldStyles","color","fontFamily","fontSize","border","headerStyles","fontWeight","sxKeys","sxHeaders","dxKeys","dxHeaders","_ref","filter","setFilter","setPage","control","value","onChange","_","exclusive","_jsx","Box","sx","width","margin","my","mx","children","FormControl","ToggleButtonGroup","_objectSpread","label","abbr","map","option","ToggleButton","_defineProperty","height","boxShadow","backgroundColor","borderRadius","borderColor","textTransform","createSvgIcon","d","resource","document","title","allSymptoms","read","_useStyles","headers","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","page","_useState5","_useState6","rowsPerPage","setRowsPerPage","displayedSymptoms","useMemo","Object","values","flat","s","sort","a","b","medical_term","localeCompare","slice","symptom","tags","totalSymptomsCount","combinedSymptoms","keys","combinedValues","length","_onDelete","confirm","mutate","newData","forEach","key","_jsxs","Stack","direction","SymptomsFilter","Paper","TableContainer","Table","size","TableHead","TableRow","header","TableCell","TableBody","sxObj","Link","to","style","textDecoration","Typography","cursor","onClick","handleTagClick","Delete","onDelete","TablePagination","component","count","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","labelRowsPerPage","rowsPerPageOptions"],"sourceRoot":""}