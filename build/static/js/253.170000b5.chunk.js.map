{"version":3,"file":"static/js/253.170000b5.chunk.js","mappings":"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","sources":["hooks/useStyles.js","components/Diagnosis/SearchDiagnosis.jsx","pages/raw/Diagnoses.jsx"],"sourcesContent":["export default function useStyles() {\n  const fieldStyles = {\n    color: \"#36454F\",\n    fontFamily: \"Helvetica\",\n    fontSize: \"12px\",\n    \"&:last-child td, &:last-child th\": { border: 0 }\n  };\n  const headerStyles = {\n    color: \"#36454F\",\n    fontFamily: \"Helvetica\",\n    fontSize: \"12px\",\n    fontWeight: \"bold\"\n  };\n\n  const dxKeys = [\"symptoms\", \"associated_symptoms\", \"minor\"];\n  const dxHeaders = [\"Diagnosis\", \"Symptoms\", \"Associated\", \"Minor\"];\n\n  const sxKeys = [\"symptoms\", \"associated_symptoms\", \"minor\"];\n  const sxHeaders = [\"Symptom\", \"Layman terms\", \"System\", \"Delete\"];\n\n  return { fieldStyles, headerStyles, sxKeys, sxHeaders, dxKeys, dxHeaders };\n}\n","import { Autocomplete, FormControl, TextField } from \"@mui/material\";\nimport { useState, useEffect } from \"react\";\n\nconst SearchDiagnosis = ({ diagnoses, setMatches }) => {\n  const [values, setValues] = useState([]);\n  const diagnosisList = diagnoses.map(d => d.diagnosis);\n\n  function updateMatches(e, newValue) {\n    setValues(newValue);\n    let temp = newValue.map(dx => diagnoses.find(d => d.diagnosis === dx));\n    setMatches(temp);\n  }\n\n  return (\n    <FormControl sx={{ width: \"90%\" }}>\n      <Autocomplete\n        disablePortal\n        autoHighlight\n        size=\"small\"\n        id=\"search-diagnosis\"\n        getOptionLabel={option => option}\n        value={values}\n        options={diagnosisList}\n        renderInput={params => (\n          <TextField\n            {...params}\n            label=\"Diagnosis search\"\n            sx={{\n              fontFamily: \"Poppins\",\n              color: \"#36454f\",\n              marginY: \"5px\",\n              fontSize: \"12px\"\n            }}\n            value={values}\n          />\n        )}\n        multiple\n        onChange={(e, newValue) => updateMatches(e, newValue)}\n        freeSolo\n      />\n    </FormControl>\n  );\n};\nexport default SearchDiagnosis;\n","import {\n  Paper,\n  Stack,\n  Typography,\n  TableHead,\n  TableBody,\n  TableContainer,\n  Table,\n  TableRow,\n  TableCell\n} from \"@mui/material\";\n\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchDiagnosis from \"../../components/Diagnosis/SearchDiagnosis\";\nimport useStyles from \"../../hooks/useStyles\";\n\nconst Diagnoses = ({ resource }) => {\n  document.title = \"Diagnoses\";\n  const allDiagnoses = resource.read();\n  const { fieldStyles, headerStyles, sxKeys, dxHeaders: headers } = useStyles();\n  const [diagnoses, setDiagnoses] = useState(allDiagnoses);\n  const [matches, setMatches] = useState([]);\n\n  useEffect(() => {\n    let shownDiagnoses = [];\n    if (matches.length > 0) {\n      matches.forEach(match => {\n        let dxToShow = diagnoses.find(dx => dx.id === match.id);\n        shownDiagnoses.push(dxToShow);\n      });\n      setDiagnoses(shownDiagnoses);\n    } else {\n      setDiagnoses(allDiagnoses);\n    }\n  }, [matches]);\n\n  return (\n    <Stack direction=\"column\" sx={{ width: \"100%\", height: \"100vh\", backgroundColor: \"#fff\" }}>\n      <SearchDiagnosis diagnoses={allDiagnoses} setMatches={setMatches} />\n      <Paper sx={{ width: \"100%\" }}>\n        <TableContainer>\n          <Table size=\"small\" aria-label=\"Requests Table\">\n            <TableHead>\n              <TableRow>\n                {headers.map(header => (\n                  <TableCell key={header} sx={headerStyles}>\n                    {header === \"Diagnosis\" ? `Diagnosis (${diagnoses.length})` : header}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {diagnoses.length > 0 &&\n                diagnoses.map(dxObj => (\n                  <TableRow key={dxObj.id}>\n                    <TableCell key=\"diagnosis\">\n                      <Link to={`${dxObj.id}`}>\n                        <Typography sx={fieldStyles}>{dxObj[\"diagnosis\"]}</Typography>\n                      </Link>\n                    </TableCell>\n                    {sxKeys.map(key => (\n                      <TableCell key={key}>\n                        {dxObj[key].map((s, idx) => (\n                          <Typography\n                            key={`${dxObj[\"diagnosis\"]}-${idx}`}\n                            sx={{ ...fieldStyles, fontSize: \"10px\" }}>\n                            {s.medical_term}\n                          </Typography>\n                        ))}\n                      </TableCell>\n                    ))}\n                    {/* <TableCell key=\"age\">\n                      <Typography sx={{ ...fieldStyles, fontSize: \"10px\" }}>\n                        {dxObj[\"age\"].join(\"-\")}\n                      </Typography>\n                    </TableCell>\n                    <TableCell key=\"tags\">\n                      <Typography sx={fieldStyles}>{dxObj[\"tags\"]}</Typography>\n                    </TableCell> */}\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </Stack>\n  );\n};\n\nexport default Diagnoses;\n"],"names":["useStyles","fieldStyles","color","fontFamily","fontSize","border","headerStyles","fontWeight","sxKeys","sxHeaders","dxKeys","dxHeaders","_ref","diagnoses","setMatches","_useState","useState","_useState2","_slicedToArray","values","setValues","diagnosisList","map","d","diagnosis","_jsx","FormControl","sx","width","children","Autocomplete","disablePortal","autoHighlight","size","id","getOptionLabel","option","value","options","renderInput","params","TextField","_objectSpread","label","marginY","multiple","onChange","e","newValue","temp","dx","find","updateMatches","freeSolo","resource","document","title","allDiagnoses","read","_useStyles","headers","setDiagnoses","_useState3","_useState4","matches","useEffect","shownDiagnoses","length","forEach","match","dxToShow","push","_jsxs","Stack","direction","height","backgroundColor","SearchDiagnosis","Paper","TableContainer","Table","TableHead","TableRow","header","TableCell","concat","TableBody","dxObj","Link","to","Typography","key","s","idx","medical_term"],"sourceRoot":""}